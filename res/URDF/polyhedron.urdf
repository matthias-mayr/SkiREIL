<?xml version="1.0"?>
<!--|
    Copyright Inria July 2017
    This project has received funding from the European Research Council (ERC) under
    the European Union's Horizon 2020 research and innovation programme (grant
    agreement No 637972) - see http://www.resibots.eu

    Contributor(s):
      - Matthias Mayr (matthias.mayr@cs.lth.se)
      - Konstantinos Chatzilygeroudis (konstantinos.chatzilygeroudis@inria.fr)
      - Rituraj Kaushik (rituraj.kaushik@inria.fr)
      - Roberto Rama (bertoski@gmail.com)


    This software is governed by the CeCILL-C license under French law and
    abiding by the rules of distribution of free software.  You can  use,
    modify and/ or redistribute the software under the terms of the CeCILL-C
    license as circulated by CEA, CNRS and INRIA at the following URL
    "http://www.cecill.info".

    As a counterpart to the access to the source code and  rights to copy,
    modify and redistribute granted by the license, users are provided only
    with a limited warranty  and the software's author,  the holder of the
    economic rights,  and the successive licensors  have only  limited
    liability.

    In this respect, the user's attention is drawn to the risks associated
    with loading,  using,  modifying and/or developing or reproducing the
    software by the user in light of its specific status of free software,
    that may mean  that it is complicated to manipulate,  and  that  also
    therefore means  that it is reserved for developers  and  experienced
    professionals having in-depth computer knowledge. Users are therefore
    encouraged to load and test the software's suitability as regards their
    requirements in conditions enabling the security of their systems and/or
    data to be ensured and,  more generally, to use and operate it in the
    same conditions as regards security.

    The fact that you are presently reading this means that you have had
    knowledge of the CeCILL-C license and that you accept its terms.

|-->
<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was written by hand                                            | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="polyhedron" xmlns:xacro="http://ros.org/wiki/xacro">
  <material name="Red">
    <color rgba="1.0 0.0 0.0 1.0"/>
  </material>
  <!-- Now we can start using the macros xacro:included above to define the actual omnipointer -->
  <!-- The first use of a macro.  This one was defined in youbot_base/base.urdf.xacro above.
       A macro like this will expand to a set of link and joint definitions, and to additional
       Gazebo-related extensions (sensor plugins, etc).  The macro takes an argument, name,
       that equals "base", and uses it to generate names for its component links and joints
       (e.g., base_link).  The xacro:included origin block is also an argument to the macro.  By convention,
       the origin block defines where the component is w.r.t its parent (in this case the parent
       is the world frame). For more, see http://www.ros.org/wiki/xacro -->
  <!-- foot for arm-->
  <link name="world"/>
  <link name="polyhedron_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.0"/>
      <geometry>
        <mesh filename="package://skireil/res/meshes/polyhedron/polyhedron.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="Red"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.0"/>
      <geometry>
        <mesh filename="package://skireil/res/meshes/polyhedron/polyhedron.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <!-- CENTER OF MASS -->
      <origin rpy="0 0 0" xyz="-0.063 -0.01 0.01"/>
      <mass value="0.037"/>
      <inertia ixx="0.00000296" ixy="-0.000002466" ixz="0.0" iyy="0.000019938" iyz="0.0" izz="0.000020555"/>
    </inertial>
  </link>
  <!-- joint between world and box_link -->
  <joint name="polyhedron_joint" type="floating">
    <origin rpy="0 0 0" xyz="-0.6 0.3 1.0"/>
    <parent link="world"/>
    <child link="polyhedron_link"/>
  </joint>
</robot>
